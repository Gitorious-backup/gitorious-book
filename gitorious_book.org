* Introduction
* How Gitorious works
** Features & benefits
** Overview: services, processes, packages
** How the web frontend works
   Briefly describe Rails/web architecture
** How the git backend works
File structure, how we handle incoming ssh/git operations, the gitorious script
** FOSS licensing
** Gitorious AS services
* Installation
** Overview - common steps
** Distro specific instructions
*** CentOS / RHEL
*** Debian / Ubuntu
* Upgrades

** Approach 1: Upgrade current software

git pull origin master | git pull origin TAG/VERSION
git submodule init
db:migrate
rake assets:clear
touch tmp/restart.txt

** Approach 2: Snapshot old instance, reinstall, restore old state

* Using the web frontend
(Tour of the UI, how to do stuff. Add after UI overhaul)
* Authentication & authorization
** LDAP integration
** Private projects/repositories
* Keeping your site up
** Monit
** Diagnostics
* Backup & disaster recovery
* Scaling
** Caching with Vagrant
** Horizontal scaling
   what sort of hardware will you need to keep a single server running
   under misc typical usage scenarios?
** Vertical scaling
   distributing the load over multiple serves
** Repository hashing/sharding
* Troubleshooting
** Current common sticking points
*** Repo creation getting stuck
*** ...
* Developing
** Setting up your development environment
** Submitting patches and merge requests
* Contributing
** Bug reports
** Merge Requests
** Community funded features
* Need more help?
** Google Group
** #gitorious on IRC
** Gitorious AS services & products
* Feedback
* Frequently Asked Questions
